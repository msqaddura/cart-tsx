{"version":3,"sources":["components/layout/Root.tsx","store/matches/types.ts","store/matches/actions.ts","store/cart/selectors.ts","store/cart/types.ts","store/cart/actions.ts","styles/styled.ts","components/matches/Participant.tsx","components/matches/MatchItem.tsx","components/matches/MatchGroup.tsx","containers/MatchesContainer.tsx","components/cart/NoCart.tsx","components/cart/CartItem.tsx","utils/index.ts","components/cart/Cart.tsx","containers/CartContainer.tsx","pages/matches/index.tsx","styles/globals.ts","components/cart/CartSummary.tsx","pages/cart/Checkout.tsx","routes.tsx","styles/themes/main.ts","app.tsx","serviceWorker.ts","store/matches/reducer.ts","store/matches/mock.ts","store/matches/sagas.ts","store/cart/reducer.ts","store/cart/saga.ts","store/index.ts","index.tsx","configureStore.ts"],"names":["Root","children","className","to","src","alt","SPORT","MatchesActionTypes","fetchRequest","action","FETCH_REQUEST","fetchSuccess","data","FETCH_SUCCESS","findMatchInCart","match","participant","findIndex","cartItem","id","anticipated","name","CartActionTypes","removeItemFromCart","item","REMOVE_CART_ITEM","submitCartSuccess","SUBMIT_CART_SUCCESS","styled","mapDispatchToProps","add","ADD_CART_ITEM","remove","Index","BetValue","Button","connect","inCart","cart","onClick","type","active","disabled","participants","par","betValue","Wrapper","Overlay","Teams","Foot","props","theme","colors","poi","MatchItem","desc","par1","par2","Participant","Card","Accordion","Header","head","HeaderButton","MatchGroup","sport","matches","sportSafe","replace","style","position","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","filter","map","key","fetchMatches","loading","errors","React","componentDidMount","render","this","BASKETBALL","FOOTBALL","TENNIS","OTHER_SPORTS","NoCart","cancel","Stake","update","UPDATE_CART_ITEM","stake","maxWidth","value","onChange","event","preventDefault","target","min","number","digits","toFixed","fixedFormat","Cart","total","submit","flush","index","CartItem","role","CartContainer","length","defaultProps","FLUSH_CART","SUBMIT_CART","globals","css","JSON","stringify","CheckoutPage","Routes","styles","exact","path","component","MatchesPage","mainTheme","background","body","darken","apply","border","App","store","history","main","Boolean","window","location","hostname","initialState","undefined","reducer","state","payload","FETCH_ERROR","MATCHES","handleFetch","put","watchFetchRequest","takeEvery","matchesSaga","all","fork","postReduce","reduce","acc","curr","console","log","handleSubmit","push","watch","cartSaga","createRootReducer","combineReducers","matchesReducer","cartReducer","router","connectRouter","rootSaga","createBrowserHistory","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","routerMiddleware","run","configureStore","INITIAL_REDUX_STATE","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d376d4a0.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Root: React.FC = ({ children }) => (\r\n  <>\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      <NavLink to=\"/\">\r\n        <img src=\"/images/logo.png\" alt=\"logo\" />\r\n      </NavLink>\r\n    </nav>\r\n    <div className=\"container\">{children}</div>\r\n  </>\r\n)\r\n\r\nexport default Root\r\n","export interface Participant {\r\n  name: string\r\n  betValue: number\r\n}\r\n\r\nexport enum SPORT {\r\n  FOOTBALL = 'FOOTBALL',\r\n  TENNIS = 'TENNIS',\r\n  OTHER_SPORTS = 'OTHER SPORTS',\r\n  BASKETBALL = 'BASKETBALL'\r\n}\r\nexport interface Match {\r\n  id: number\r\n  desc: string\r\n  sport: SPORT\r\n\r\n  participants: Participant[]\r\n\r\n  active: boolean\r\n}\r\nexport interface MatchesState {\r\n  readonly loading: boolean\r\n  readonly data: Match[]\r\n  readonly errors?: string\r\n}\r\n\r\nexport enum MatchesActionTypes {\r\n  FETCH_REQUEST = '@@matches/FETCH_REQUEST',\r\n  FETCH_SUCCESS = '@@matches/FETCH_SUCCESS',\r\n  FETCH_ERROR = '@@matches/FETCH_ERROR',\r\n  ADD_MATCH_TO_CART = '@@matches/ADD_MATCH_TO_CART',\r\n  REMOVE_MATCH_FROM_CART = '@@matches/REMOVE_MATCH_FROM_CART'\r\n}\r\n","import { action } from 'typesafe-actions'\r\nimport { MatchesActionTypes, Match } from './types'\r\n\r\nexport const fetchRequest = () => action(MatchesActionTypes.FETCH_REQUEST)\r\n\r\nexport const fetchSuccess = (data: Match[]) => action(MatchesActionTypes.FETCH_SUCCESS, data)\r\nexport const fetchError = (message: string) => action(MatchesActionTypes.FETCH_ERROR, message)\r\n","import { Participant, Match } from '../matches/types'\r\nimport { CartState } from './types'\r\n\r\nexport function findMatchInCart({ data }: CartState, match: Match, participant: Participant) {\r\n  return data.findIndex(cartItem => cartItem.match.id === match.id && cartItem.anticipated.name === participant.name) !== -1\r\n}\r\n","import { Participant, Match } from '../matches/types'\r\n\r\nexport interface CartItem {\r\n  match: Match\r\n  anticipated: Participant\r\n  stake?: number\r\n}\r\n\r\nexport interface CartState {\r\n  readonly data: CartItem[]\r\n  readonly total: number\r\n}\r\n\r\nexport enum CartActionTypes {\r\n  ADD_CART_ITEM = '@@cart/ADD_CART_ITEM',\r\n  REMOVE_CART_ITEM = '@@cart/REMOVE_CART_ITEM',\r\n  UPDATE_CART_ITEM = '@@cart/UPDATE_CART_ITEM',\r\n  SUBMIT_CART = '@@cart/SUBMIT_CART',\r\n  SUBMIT_CART_SUCCESS = '@@cart/SUBMIT_CART_SUCCESS',\r\n\r\n  FLUSH_CART = '@@cart/FLUSH_CART'\r\n}\r\n","import { action } from 'typesafe-actions'\r\nimport { CartActionTypes, CartItem } from './types'\r\n\r\nexport const addItemToCart = (item: CartItem) => action(CartActionTypes.ADD_CART_ITEM, item)\r\n\r\nexport const removeItemFromCart = (item: CartItem) => action(CartActionTypes.REMOVE_CART_ITEM, item)\r\n\r\nexport const updateCartItem = (item: CartItem) => action(CartActionTypes.UPDATE_CART_ITEM, item)\r\n\r\nexport const flushCart = () => action(CartActionTypes.FLUSH_CART)\r\n\r\nexport const submitCart = () => action(CartActionTypes.SUBMIT_CART)\r\nexport const submitCartSuccess = () => action(CartActionTypes.SUBMIT_CART_SUCCESS)\r\n","import styled, { CreateStyled } from '@emotion/styled'\r\n\r\nexport interface Theme {\r\n  colors: {\r\n    background: string\r\n    body: string\r\n    head: string\r\n    apply: string\r\n    cancel: string\r\n    poi: string\r\n    disabled: string\r\n  }\r\n  border: string\r\n}\r\nexport default styled as CreateStyled<Theme>\r\n","/* eslint-disable no-nested-ternary */\r\nimport * as React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Match, Participant } from '../../store/matches/types'\r\nimport { findMatchInCart } from '../../store/cart/selectors'\r\nimport { ApplicationState } from '../../store'\r\nimport { addItemToCart, removeItemFromCart } from '../../store/cart/actions'\r\nimport styled from '../../styles/styled'\r\n\r\ntype Props = {\r\n  match: Match\r\n  participant: Participant\r\n  inCart?: boolean\r\n  add?: any\r\n  remove?: any\r\n}\r\n\r\nconst ParticipantButton: React.FC<Props> = ({ match, inCart, participant, add, remove }) => {\r\n  const handleClick = () => (inCart ? remove({ match, anticipated: participant }) : add({ match, anticipated: participant }))\r\n\r\n  return (\r\n    <Button\r\n      onClick={handleClick}\r\n      type=\"button\"\r\n      className={`btn btn-${inCart ? 'success' : match.active ? 'primary' : 'dark'}`}\r\n      disabled={!match.active}\r\n    >\r\n      <Index>{1 + match.participants.findIndex(par => par.name === participant.name)}:</Index>\r\n      {<BetValue>{match.active ? participant.betValue : ''}</BetValue>}\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ cart }: ApplicationState, { match, participant }: Props) => ({\r\n  inCart: findMatchInCart(cart, match, participant)\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  add: addItemToCart,\r\n  remove: removeItemFromCart\r\n}\r\n\r\nconst Index = styled('span')`\r\n  float: left;\r\n`\r\n\r\nconst BetValue = styled('span')`\r\n  padding-left: 10px;\r\n  float: right;\r\n`\r\n\r\nconst Button = styled('button')`\r\n  width: 100px;\r\n  border-radius: 0;\r\n\r\n  &:focus {\r\n    box-shadow: none !important;\r\n  }\r\n`\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ParticipantButton)\r\n","import * as React from 'react'\r\n\r\nimport { Match } from '../../store/matches/types'\r\nimport ParticipantButton from './Participant'\r\nimport styled from '../../styles/styled'\r\n\r\ntype Props = {\r\n  match: Match\r\n}\r\nconst MatchItem: React.FC<Props> = ({ match }: Props) => {\r\n  const { desc, participants } = match\r\n  const [par1, par2] = participants\r\n  return (\r\n    <Wrapper className=\"list-group-item p-0\">\r\n      {!match.active && <Overlay />}\r\n      <div className=\"d-flex align-items-center\">\r\n        <Teams className=\"flex-fill\">\r\n          <b>\r\n            {participants[0].name} - {participants[1].name}\r\n          </b>\r\n        </Teams>\r\n        <ParticipantButton participant={par1} match={match} />\r\n        <ParticipantButton participant={par2} match={match} />\r\n      </div>\r\n      <Foot>\r\n        <i> {desc}</i>\r\n      </Foot>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled('li')`\r\n  border-bottom: 1px solid black;\r\n  border-top: 1px solid black;\r\n  border: 0;\r\n  position: relative;\r\n`\r\nconst Overlay = styled('div')`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 10;\r\n  background: black;\r\n  opacity: 0.5;\r\n`\r\nconst Teams = styled('div')`\r\n  padding-left: 10px;\r\n`\r\n\r\nconst Foot = styled('div')`\r\n  background: ${props => props.theme.colors.poi};\r\n`\r\n\r\nexport default MatchItem\r\n","import * as React from 'react'\r\nimport { SPORT, Match } from '../../store/matches/types'\r\nimport MatchItem from './MatchItem'\r\nimport styled from '../../styles/styled'\r\n\r\ntype Props = {\r\n  sport: SPORT\r\n  matches: Match[]\r\n}\r\nconst MatchGroup: React.FC<Props> = ({ sport, matches }: Props) => {\r\n  const sportSafe = sport.replace(' ', '')\r\n  return (\r\n    <Accordion className=\"accordion\" id={`accordion_${sportSafe}`}>\r\n      <Card className=\"card\">\r\n        <Header className=\"card-header\" id={`heading_${sportSafe}`}>\r\n          <h2 className=\"mb-0\" style={{ position: 'relative' }}>\r\n            <HeaderButton\r\n              className=\"btn btn-link stretched-link\"\r\n              type=\"button\"\r\n              data-toggle=\"collapse\"\r\n              data-target={`#collapse_${sportSafe}`}\r\n              aria-expanded=\"true\"\r\n              aria-controls={`collapse_${sportSafe}`}\r\n            >\r\n              {sport}\r\n            </HeaderButton>\r\n          </h2>\r\n        </Header>\r\n\r\n        <div\r\n          id={`collapse_${sportSafe}`}\r\n          className=\"collapse show\"\r\n          aria-labelledby={`heading_${sportSafe}`}\r\n          data-parent={`#accordion_${sportSafe}`}\r\n        >\r\n          <div className=\"card-body p-0\">\r\n            <ul className=\"list-group\">\r\n              {matches\r\n                .filter(match => match.sport === sport)\r\n                .map(match => (\r\n                  <MatchItem match={match} key={match.id} />\r\n                ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </Accordion>\r\n  )\r\n}\r\n\r\nconst Card = styled('div')`\r\n  border: 0;\r\n`\r\n\r\nconst Accordion = styled('div')`\r\n  box-shadow: 0 0 2px black;\r\n  margin: 5px;\r\n`\r\nconst Header = styled('div')`\r\n  background: ${props => props.theme.colors.head};\r\n  color: white !important;\r\n`\r\n\r\nconst HeaderButton = styled('button')`\r\n  color: white;\r\n  &:hover {\r\n    text-decoration: none;\r\n    color: dodgerblue;\r\n  }\r\n  &:focus {\r\n    text-decoration: none;\r\n    color: white;\r\n  }\r\n`\r\nexport default MatchGroup\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ApplicationState } from '../store'\r\nimport { fetchRequest } from '../store/matches/actions'\r\nimport { SPORT, Match } from '../store/matches/types'\r\nimport MatchGroup from '../components/matches/MatchGroup'\r\n\r\ninterface PropsFromState {\r\n  loading: boolean\r\n  data: Match[]\r\n  errors?: string\r\n}\r\ninterface PropsFromDispatch {\r\n  fetchMatches: typeof fetchRequest\r\n}\r\ntype AllProps = PropsFromState & PropsFromDispatch\r\n\r\nclass MatchesContainer extends React.Component<AllProps> {\r\n  public componentDidMount() {\r\n    // fetchMatches()\r\n  }\r\n\r\n  public render() {\r\n    const { data } = this.props\r\n\r\n    return (\r\n      <div className=\"\">\r\n        <MatchGroup sport={SPORT.BASKETBALL} matches={data} />\r\n        <MatchGroup sport={SPORT.FOOTBALL} matches={data} />\r\n        <MatchGroup sport={SPORT.TENNIS} matches={data} />\r\n        <MatchGroup sport={SPORT.OTHER_SPORTS} matches={data} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = ({ matches }: ApplicationState) => ({\r\n  loading: matches.loading,\r\n  errors: matches.errors,\r\n  data: matches.data\r\n})\r\nconst mapDispatchToProps = {\r\n  fetchMatches: fetchRequest\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MatchesContainer)\r\n","import React from 'react'\r\nimport styled from '../../styles/styled'\r\n\r\nconst NoCart: React.SFC = () => (\r\n  <Wrapper>\r\n    <br />\r\n    <br />\r\n    To select a bet, please click on any odds\r\n  </Wrapper>\r\n)\r\n\r\nconst Wrapper = styled('h6')`\r\n  text-align: center;\r\n`\r\nexport default NoCart\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CartItem } from '../../store/cart/types'\r\nimport { updateCartItem, removeItemFromCart } from '../../store/cart/actions'\r\nimport styled from '../../styles/styled'\r\nimport { fixedFormat } from '../../utils'\r\n\r\ntype Props = {\r\n  cartItem: CartItem\r\n  update?: any\r\n  remove?: any\r\n}\r\nconst CartItemBox: React.FC<Props> = ({ cartItem, update, remove }) => {\r\n  const { anticipated, stake } = cartItem\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.preventDefault()\r\n    update({ ...cartItem, stake: +event.target.value })\r\n  }\r\n\r\n  const handleClick = () => {\r\n    remove(cartItem)\r\n  }\r\n\r\n  return (\r\n    <Wrapper className=\"d-flex\">\r\n      <div className=\"\">\r\n        <button onClick={handleClick} type=\"button\" className=\"btn btn-outline\">\r\n          <i className=\"fa fa-undo\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"flex-fill\">\r\n        <p>\r\n          <b>{anticipated.name}</b> wins\r\n          <Stake>{anticipated.betValue}</Stake>\r\n        </p>\r\n        <input type=\"number\" style={{ maxWidth: '140px' }} value={stake} onChange={handleChange} min={0} />\r\n        <p>To Return: € {fixedFormat(stake ? stake * anticipated.betValue : 0)}</p>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nconst Wrapper = styled('div')`\r\n  background-color: ${props => props.theme.colors.cancel};\r\n  margin: 2px;\r\n`\r\n\r\nconst Stake = styled('span')`\r\n  float: right;\r\n  margin-right: 5px;\r\n`\r\n\r\nconst mapDispatchToProps = {\r\n  update: updateCartItem,\r\n  remove: removeItemFromCart\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(CartItemBox)\r\n","export function fixedFormat(number: number, digits = 2) {\r\n  return number.toFixed(digits)\r\n}\r\n","/* eslint-disable react/no-array-index-key */\r\nimport React from 'react'\r\nimport { CartItem } from '../../store/cart/types'\r\nimport CartItemBox from './CartItem'\r\nimport styled from '../../styles/styled'\r\nimport { submitCart, flushCart } from '../../store/cart/actions'\r\n\r\ninterface Props {\r\n  data: CartItem[]\r\n  total: number\r\n  submit: typeof submitCart\r\n  flush: typeof flushCart\r\n}\r\nconst Cart: React.FC<Props> = ({ data, total, submit, flush }: Props) => (\r\n  <>\r\n    {data.map((cartItem, index) => (\r\n      <CartItemBox cartItem={cartItem} key={`cartitem_${index}`} />\r\n    ))}\r\n    <div>\r\n      Total Stake <Stake>€ {total}</Stake>\r\n    </div>\r\n    <div className=\"btn-group btn-group-sm w-100\" role=\"group\">\r\n      <button onClick={() => flush()} type=\"button\" className=\"btn btn-warning\">\r\n        Clear\r\n      </button>\r\n      <button onClick={() => submit()} type=\"button\" className=\"btn btn-primary\" disabled={total === 0}>\r\n        Submit\r\n      </button>\r\n    </div>\r\n  </>\r\n)\r\n\r\nconst Stake = styled('span')`\r\n  float: right;\r\n`\r\n\r\nexport default Cart\r\n","/* eslint-disable react/no-array-index-key */\r\nimport * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ApplicationState } from '../store'\r\nimport { fetchRequest } from '../store/matches/actions'\r\nimport { CartItem } from '../store/cart/types'\r\nimport NoCart from '../components/cart/NoCart'\r\nimport Cart from '../components/cart/Cart'\r\nimport styled from '../styles/styled'\r\nimport { flushCart, submitCart } from '../store/cart/actions'\r\n\r\ninterface PropsFromState {\r\n  data: CartItem[]\r\n  total: number\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n  fetchMatches: typeof fetchRequest\r\n  flush: typeof flushCart\r\n  submit: typeof submitCart\r\n}\r\ntype AllProps = PropsFromState & PropsFromDispatch\r\n\r\nexport class CartContainer extends React.Component<AllProps> {\r\n  // eslint-disable-next-line react/static-property-placement\r\n  public static defaultProps: PropsFromState = {\r\n    data: [],\r\n    total: 0\r\n  }\r\n\r\n  public componentDidMount() {\r\n    // fetchMatches()\r\n  }\r\n\r\n  public render() {\r\n    const { data, total, flush, submit } = this.props\r\n\r\n    return (\r\n      <Wrapper className={data.length ? 'filled' : 'empty'}>\r\n        <h4>Bet Slip</h4>\r\n        <hr />\r\n        {data.length ? <Cart flush={flush} submit={submit} data={data} total={total} /> : <NoCart />}\r\n      </Wrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst Wrapper = styled('div')`\r\n  margin-top: 5px;\r\n  background: ${props => props.theme.colors.head};\r\n  box-shadow: 0 0 2px black;\r\n  color: white;\r\n  padding: 10px;\r\n`\r\n\r\nconst mapStateToProps = ({ cart }: ApplicationState) => ({\r\n  data: cart.data,\r\n  total: cart.total\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  fetchMatches: fetchRequest,\r\n  flush: flushCart,\r\n  submit: submitCart\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CartContainer)\r\n","import * as React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ApplicationState } from '../../store'\r\nimport { fetchRequest } from '../../store/matches/actions'\r\nimport { Match } from '../../store/matches/types'\r\nimport MatchesContainer from '../../containers/MatchesContainer'\r\nimport CartContainer from '../../containers/CartContainer'\r\n\r\ninterface PropsFromState {\r\n  loading: boolean\r\n  data: Match[]\r\n  errors?: string\r\n}\r\n\r\ninterface PropsFromDispatch {\r\n  fetchMatches: typeof fetchRequest\r\n}\r\ntype AllProps = PropsFromState & PropsFromDispatch\r\n\r\nclass MatchesIndexPage extends React.Component<AllProps> {\r\n  public componentDidMount() {\r\n    const { data, fetchMatches } = this.props\r\n\r\n    if (data.length === 0) {\r\n      fetchMatches()\r\n    }\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col col-12 col-md-8\">\r\n          <MatchesContainer />\r\n        </div>\r\n        <div className=\"col col-12 col-md-4\">\r\n          <CartContainer />\r\n          <br />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = ({ matches }: ApplicationState) => ({\r\n  loading: matches.loading,\r\n  errors: matches.errors,\r\n  data: matches.data\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  fetchMatches: fetchRequest\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MatchesIndexPage)\r\n","import { css } from '@emotion/core'\r\n\r\nconst globals = css`\r\n  * {\r\n    border-radius: 0 !important;\r\n  }\r\n  body {\r\n    background: #f1f1f1;\r\n  }\r\n`\r\n\r\nexport default globals\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport styled from '../../styles/styled'\r\nimport { ApplicationState } from '../../store'\r\nimport { CartState } from '../../store/cart/types'\r\n\r\nconst CartSummary: React.SFC<CartState> = ({ data, total }) => (\r\n  <Wrapper>\r\n    <h1>Summary</h1>\r\n    <p>This is a plan routed page where you can check your cart in JSON format</p>\r\n    <p>Do not worry, your cart is not cleared</p>\r\n    <hr />\r\n    <h1>Data</h1>\r\n    <p>{JSON.stringify(data)}</p>\r\n    <hr />\r\n    <h1>Total</h1>\r\n    <p>{total}</p>\r\n  </Wrapper>\r\n)\r\n\r\nconst Wrapper = styled('div')`\r\n  text-align: center;\r\n  margin-top: 20px;\r\n`\r\n\r\nconst mapStateToProps = ({ cart }: ApplicationState) => ({\r\n  ...cart\r\n})\r\n\r\nexport default connect(mapStateToProps)(CartSummary)\r\n","import * as React from 'react'\r\nimport CartSummary from '../../components/cart/CartSummary'\r\n\r\nfunction CheckoutPage() {\r\n  return <CartSummary />\r\n}\r\n\r\nexport default CheckoutPage\r\n","import * as React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport { Global } from '@emotion/core'\r\n\r\nimport Root from './components/layout/Root'\r\n\r\nimport MatchesPage from './pages/matches'\r\nimport globals from './styles/globals'\r\nimport CheckoutPage from './pages/cart/Checkout'\r\n\r\nconst Routes: React.FC = () => (\r\n  <Root>\r\n    <Global styles={globals} />\r\n    <Switch>\r\n      <Route exact path=\"/\" component={MatchesPage} />\r\n      <Route exact path=\"/checkout\" component={CheckoutPage} />\r\n      <Route component={() => <div>Four Oh Four, no links in this project</div>} />\r\n    </Switch>\r\n  </Root>\r\n)\r\n\r\nexport default Routes\r\n","import { darken } from 'polished'\r\nimport { Theme } from '../styled'\r\n// needs color pallette\r\nconst mainTheme: Theme = {\r\n  colors: {\r\n    background: '',\r\n    body: '',\r\n    head: darken(0.2, '#007bff'),\r\n    cancel: '#28a745', // wrong name but anyway\r\n    apply: 'dodgerblue',\r\n    poi: '#a4d1ff',\r\n    disabled: 'red'\r\n  },\r\n  border: '0px'\r\n}\r\n\r\nexport default mainTheme\r\n","import * as React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\nimport { ThemeProvider } from 'emotion-theming'\r\nimport { Store } from 'redux'\r\nimport { History } from 'history'\r\n\r\nimport Routes from './routes'\r\nimport { ApplicationState } from './store'\r\nimport { main } from './styles/themes'\r\n\r\ninterface Props {\r\n  store: Store<ApplicationState>\r\n  history: History\r\n}\r\nconst App: React.FC<Props> = ({ store, history }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ConnectedRouter history={history}>\r\n        <ThemeProvider theme={main}>\r\n          <Routes />\r\n        </ThemeProvider>\r\n      </ConnectedRouter>\r\n    </Provider>\r\n  )\r\n}\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n)\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA')\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log('New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.')\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.')\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import { Reducer } from 'redux'\r\nimport { MatchesState, MatchesActionTypes } from './types'\r\n\r\nexport const initialState: MatchesState = {\r\n  data: [],\r\n  errors: undefined,\r\n  loading: false\r\n}\r\n\r\nconst reducer: Reducer<MatchesState> = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MatchesActionTypes.FETCH_REQUEST: {\r\n      return { ...state, loading: true }\r\n    }\r\n    case MatchesActionTypes.FETCH_SUCCESS: {\r\n      return { ...state, loading: false, data: action.payload }\r\n    }\r\n    case MatchesActionTypes.FETCH_ERROR: {\r\n      return { ...state, loading: false, errors: action.payload }\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport { reducer as matchesReducer }\r\n","import { SPORT, Match } from './types'\r\n\r\nexport const MATCHES: Match[] = [\r\n  {\r\n    sport: SPORT.BASKETBALL,\r\n    desc: '1:0 45\"',\r\n    active: true,\r\n    id: 1,\r\n    participants: [{ name: 'Estonia', betValue: 1 }, { name: 'Lithania', betValue: 2 }]\r\n  },\r\n  {\r\n    sport: SPORT.BASKETBALL,\r\n    desc: '1:0 Match Over',\r\n    active: false,\r\n    id: 2,\r\n    participants: [{ name: 'Latvia', betValue: 1 }, { name: 'Bellarus', betValue: 2 }]\r\n  },\r\n  {\r\n    sport: SPORT.FOOTBALL,\r\n    desc: '(1:0) 51\"',\r\n    active: true,\r\n    id: 3,\r\n    participants: [{ name: 'Brazil', betValue: 0.5 }, { name: 'Germany', betValue: 2 }]\r\n  },\r\n  {\r\n    sport: SPORT.FOOTBALL,\r\n    desc: '(0:0) 4\"',\r\n    active: true,\r\n    id: 4,\r\n    participants: [{ name: 'Spain', betValue: 1 }, { name: 'Chile', betValue: 5 }]\r\n  },\r\n  {\r\n    sport: SPORT.TENNIS,\r\n    desc: '1:1 (6:7, 6:1, 2:0) 0:0',\r\n    active: true,\r\n    id: 5,\r\n    participants: [{ name: 'Michel A.', betValue: 1.2 }, { name: 'Donatello', betValue: 6 }]\r\n  },\r\n  {\r\n    sport: SPORT.TENNIS,\r\n    desc: '1:1 (5:7, 6:2, 0:0) 0:0',\r\n    active: true,\r\n    id: 6,\r\n    participants: [{ name: 'Leonardo', betValue: 1 }, { name: 'Ralph', betValue: 3.1 }]\r\n  },\r\n  {\r\n    sport: SPORT.OTHER_SPORTS,\r\n    desc: 'Match Not Started',\r\n    active: false,\r\n    id: 4,\r\n    participants: [{ name: 'India', betValue: 1 }, { name: 'Australia', betValue: 1 }]\r\n  }\r\n]\r\n","import { all, fork, put, takeEvery } from 'redux-saga/effects'\r\nimport { MatchesActionTypes } from './types'\r\nimport { fetchSuccess } from './actions'\r\nimport { MATCHES } from './mock'\r\n\r\nfunction* handleFetch() {\r\n  yield put(fetchSuccess(MATCHES))\r\n}\r\n\r\nfunction* watchFetchRequest() {\r\n  yield takeEvery(MatchesActionTypes.FETCH_REQUEST, handleFetch)\r\n}\r\n\r\nfunction* matchesSaga() {\r\n  yield all([fork(watchFetchRequest)])\r\n}\r\n\r\nexport default matchesSaga\r\n","import { Reducer } from 'redux'\r\nimport { CartActionTypes, CartState, CartItem } from './types'\r\n\r\n// const calc = (items: CartItem[]) => items.reduce((acc: number, curr: CartItem) => acc + (curr.stake || 0), 0)\r\nconst postReduce = (state: CartState) => ({\r\n  ...state,\r\n  total: state.data.reduce((acc: number, curr: CartItem) => acc + (curr.stake || 0), 0)\r\n})\r\n\r\nexport const initialState: CartState = {\r\n  data: [],\r\n  total: 0\r\n}\r\n\r\nconst reducer: Reducer<CartState> = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CartActionTypes.ADD_CART_ITEM: {\r\n      return postReduce({ ...state, data: [...state.data, { ...action.payload, stake: 0 }] })\r\n    }\r\n    case CartActionTypes.REMOVE_CART_ITEM: {\r\n      return postReduce({\r\n        ...state,\r\n        data: state.data.filter(\r\n          item => !(action.payload.match.id === item.match.id && action.payload.anticipated.name === item.anticipated.name)\r\n        )\r\n      })\r\n    }\r\n    case CartActionTypes.UPDATE_CART_ITEM: {\r\n      return postReduce({\r\n        ...state,\r\n        data: state.data.map(item =>\r\n          action.payload.match.id === item.match.id && action.payload.anticipated.name === item.anticipated.name\r\n            ? { ...item, stake: action.payload.stake }\r\n            : item\r\n        )\r\n      })\r\n    }\r\n    case CartActionTypes.FLUSH_CART: {\r\n      return initialState\r\n    }\r\n    case CartActionTypes.SUBMIT_CART_SUCCESS: {\r\n      console.log(state.data, state.total)\r\n      return state\r\n    }\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}\r\n\r\nexport { reducer as cartReducer }\r\n","import { all, fork, put, takeEvery } from 'redux-saga/effects'\r\nimport { push } from 'connected-react-router'\r\nimport { CartActionTypes } from './types'\r\nimport { submitCartSuccess } from './actions'\r\n/**\r\n * This is only used because submit would be part of CRUD, so better use sagas in real life example\r\n */\r\nfunction* handleSubmit() {\r\n  yield put(submitCartSuccess())\r\n  yield put(push('/checkout'))\r\n}\r\n\r\nfunction* watch() {\r\n  yield takeEvery(CartActionTypes.SUBMIT_CART, handleSubmit)\r\n}\r\n\r\nfunction* cartSaga() {\r\n  yield all([fork(watch)])\r\n}\r\n\r\nexport default cartSaga\r\n","import { combineReducers } from 'redux'\r\nimport { all, fork } from 'redux-saga/effects'\r\nimport { connectRouter, RouterState } from 'connected-react-router'\r\nimport { History } from 'history'\r\n\r\nimport { MatchesState } from './matches/types'\r\nimport { matchesReducer } from './matches/reducer'\r\nimport matchesSaga from './matches/sagas'\r\nimport { CartState } from './cart/types'\r\nimport { cartReducer } from './cart/reducer'\r\nimport cartSaga from './cart/saga'\r\n\r\nexport interface ApplicationState {\r\n  router: RouterState\r\n\r\n  matches: MatchesState\r\n\r\n  cart: CartState\r\n}\r\n\r\nexport const createRootReducer = (history: History) =>\r\n  combineReducers({\r\n    matches: matchesReducer,\r\n    cart: cartReducer,\r\n    router: connectRouter(history)\r\n  })\r\n\r\nexport function* rootSaga() {\r\n  yield all([fork(matchesSaga), fork(cartSaga)])\r\n}\r\n","import * as React from 'react'\r\nimport * as ReactDOM from 'react-dom'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport App from './app'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport configureStore from './configureStore'\r\n\r\nimport 'typeface-ibm-plex-sans'\r\n\r\nconst history = createBrowserHistory()\r\n\r\nconst initialState = window.INITIAL_REDUX_STATE\r\nconst store = configureStore(history, initialState)\r\n\r\nReactDOM.render(<App store={store} history={history} />, document.getElementById('root'))\r\n\r\nserviceWorker.unregister()\r\n","import { Store, createStore, applyMiddleware } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { routerMiddleware } from 'connected-react-router'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { History } from 'history'\r\nimport { ApplicationState, createRootReducer, rootSaga } from './store'\r\n\r\nexport default function configureStore(history: History, initialState: ApplicationState): Store<ApplicationState> {\r\n  const composeEnhancers = composeWithDevTools({})\r\n\r\n  const sagaMiddleware = createSagaMiddleware()\r\n  const store = createStore(\r\n    createRootReducer(history),\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\r\n  )\r\n  sagaMiddleware.run(rootSaga)\r\n  return store\r\n}\r\n"],"sourceRoot":""}